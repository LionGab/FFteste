version: '3.8'

services:
  # WAHA - WhatsApp HTTP API
  waha:
    image: devlikeapro/waha
    container_name: academia-waha
    ports:
      - "3000:3000"
    environment:
      - WHATSAPP_HOOK_URL=http://n8n:5678/webhook/academia-whatsapp
      - WHATSAPP_HOOK_EVENTS=message,session.status,session.upsert,session.remote-update
      - WHATSAPP_DEFAULT_ENGINE=NOWEB
      - WHATSAPP_START_BROWSER_TIMEOUT=60
      - WAHA_API_KEY=${WAHA_API_KEY:-academia_secure_key_2024}
      - WAHA_LOG_LEVEL=info
      - WAHA_PRINT_QR=true
      - WAHA_SWAGGER_CONFIG_ADVANCED=true
      - WAHA_DASHBOARD_ENABLED=true
      - WAHA_DASHBOARD_USERNAME=admin
      - WAHA_DASHBOARD_PASSWORD=${WAHA_DASHBOARD_PASSWORD:-admin123}
    volumes:
      - waha_data:/app/.sessions
      - ./logs/waha:/app/logs
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: academia-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-academia123}
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n123
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=true
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      - N8N_TEMPLATES_ENABLED=true
      - N8N_ONBOARDING_FLOW_DISABLED=true
      - N8N_PERSONALIZATION_ENABLED=false
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_TIMEOUT=3600
      - EXECUTIONS_TIMEOUT_MAX=7200
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=redis123
    volumes:
      - n8n_data:/home/node/.n8n
      - ./logs/n8n:/home/node/.n8n/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL - Database
  postgres:
    image: postgres:15-alpine
    container_name: academia-postgres
    ports:
      - "5434:5432"  # External port 5434 to avoid conflicts
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n123
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n123
      - POSTGRES_MAX_CONNECTIONS=200
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis - Cache e Queue
  redis:
    image: redis:7-alpine
    container_name: academia-redis
    command: redis-server --appendonly yes --requirepass redis123 --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6381:6379"  # External port 6381 to avoid conflicts
    environment:
      - REDIS_PASSWORD=redis123
      - REDIS_MAXMEMORY=512mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Adminer - Database Management
  adminer:
    image: adminer:latest
    container_name: academia-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=hydra
      - ADMINER_PLUGINS=tables-filter tinymce
    networks:
      - academia-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Application - Full Force Academia WhatsApp Bot
  academia-app:
    build:
      context: ./FullForceAcademia
      dockerfile: Dockerfile
    container_name: academia-whatsapp-bot
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
      - DATABASE_URL=postgresql://n8n:n8n123@postgres:5432/n8n
      - WAHA_API_URL=http://waha:3000
      - WAHA_API_KEY=${WAHA_API_KEY:-academia_secure_key_2024}
    volumes:
      - ./FullForceAcademia/.env:/app/.env:ro
      - ./logs/app:/app/logs
      - academia_sessions:/app/sessions
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      waha:
        condition: service_healthy
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  waha_data:
    name: academia_waha_data
  n8n_data:
    name: academia_n8n_data
  postgres_data:
    name: academia_postgres_data
  redis_data:
    name: academia_redis_data
  academia_sessions:
    name: academia_app_sessions

networks:
  academia-network:
    name: academia-network
    driver: bridge