{
  "name": "FullForce Academia WAHA Campaign 650",
  "description": "Automated WhatsApp campaign for 650 inactive members reactivation via WAHA API with ROI tracking",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "path": "fullforce-650-campaign",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "id": "webhook-trigger"
    },
    {
      "parameters": {
        "url": "={{ $env.FULLFORCE_API_URL }}/api/members/inactive",
        "method": "GET",
        "headers": {
          "Authorization": "Bearer {{ $env.FULLFORCE_API_KEY }}"
        },
        "options": {
          "timeout": 30000
        }
      },
      "name": "Load Members",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 300],
      "id": "load-members"
    },
    {
      "parameters": {
        "jsCode": "// Segment 650 inactive members by priority\nconst members = $input.all()[0].json.members || [];\nconst segments = {\n  criticos: [],\n  moderados: [],\n  baixaFreq: [],\n  prospects: []\n};\n\nconst today = new Date();\nconst avgMonthlyValue = 129.90;\n\nconsole.log(`Processing ${members.length} members...`);\n\nmembers.forEach((member, index) => {\n  // Validate phone number\n  if (!member.telefone || member.telefone.length < 10) {\n    console.log(`Skipping member ${member.nome} - invalid phone`);\n    return;\n  }\n\n  const lastActivity = new Date(member.ultimaAtividade || member.dataCadastro);\n  const daysDiff = Math.floor((today - lastActivity) / (1000 * 60 * 60 * 24));\n  const primeiroNome = (member.nome || '').split(' ')[0];\n  \n  // Format phone with Brazil code\n  const telefone = member.telefone.startsWith('55') ? member.telefone : `55${member.telefone}`;\n  \n  const baseData = {\n    ...member,\n    telefone,\n    diasInativo: daysDiff,\n    primeiroNome,\n    index: index + 1\n  };\n  \n  if (daysDiff >= 90) {\n    segments.criticos.push({\n      ...baseData,\n      urgencia: 'CRITICA',\n      prioridade: 1,\n      oferta: `VOLTA POR R$ ${(member.valorPlano * 0.4).toFixed(2)} - 60% OFF!`,\n      desconto: 60,\n      expectedRevenue: (member.valorPlano || avgMonthlyValue) * 0.35 * 6\n    });\n  } else if (daysDiff >= 60) {\n    segments.moderados.push({\n      ...baseData,\n      urgencia: 'ALTA',\n      prioridade: 2,\n      oferta: `${primeiroNome}, volta com 50% OFF!`,\n      desconto: 50,\n      expectedRevenue: (member.valorPlano || avgMonthlyValue) * 0.25 * 6\n    });\n  } else if (daysDiff >= 30 || (member.frequenciaMensal || 0) < 8) {\n    segments.baixaFreq.push({\n      ...baseData,\n      urgencia: 'MEDIA',\n      prioridade: 3,\n      oferta: 'Personal Trainer GRÁTIS + Reavaliação',\n      desconto: 0,\n      expectedRevenue: (member.valorPlano || avgMonthlyValue) * 0.15 * 6\n    });\n  } else {\n    segments.prospects.push({\n      ...baseData,\n      urgencia: 'BAIXA',\n      prioridade: 4,\n      oferta: '7 dias GRÁTIS + Avaliação Física',\n      desconto: 0,\n      expectedRevenue: (member.valorPlano || avgMonthlyValue) * 0.08 * 3\n    });\n  }\n});\n\nconsole.log('Segmentation completed:', {\n  criticos: segments.criticos.length,\n  moderados: segments.moderados.length,\n  baixaFreq: segments.baixaFreq.length,\n  prospects: segments.prospects.length\n});\n\n// Return all members sorted by priority\nconst allMembers = [\n  ...segments.criticos,\n  ...segments.moderados,\n  ...segments.baixaFreq,\n  ...segments.prospects\n].sort((a, b) => a.prioridade - b.prioridade);\n\nreturn allMembers;"
      },
      "name": "Segment Members",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300],
      "id": "segment-members"
    },
    {
      "parameters": {
        "jsCode": "// Generate personalized WhatsApp message\nconst member = $json;\nconst primeiroNome = member.primeiroNome || member.nome.split(' ')[0];\n\nconst templates = {\n  CRITICA: `🚨 *${primeiroNome}*, ÚLTIMA CHANCE!\\n\\n💔 ${member.diasInativo} dias sem você... SENTIMOS MUITO SUA FALTA!\\n\\n🔥 *OFERTA EXCLUSIVA - SÓ HOJE:*\\n💰 ${member.oferta}\\n⏰ *Expira em 6 HORAS*\\n\\n💪 Sua saúde não pode esperar mais!\\n\\n📞 Responda *SIM* agora ou perca para sempre!\\n\\n🏃‍♂️ *Academia Full Force* - Sua volta é nossa vitória!`,\n  \n  ALTA: `💪 *${primeiroNome}*, que saudades!\\n\\n🎯 ${member.diasInativo} dias é muito tempo sem treinar...\\n\\n🔥 *SUA OFERTA ESPECIAL:*\\n💰 ${member.oferta}\\n📅 *Válida por 48 horas*\\n\\n✨ Vamos retomar sua evolução juntos?\\n\\nSeus músculos estão esperando! 💪\\n\\n📞 Responda *SIM* e volte hoje mesmo!\\n\\n🏃‍♂️ *Academia Full Force* - Sua transformação continua aqui!`,\n  \n  MEDIA: `🏆 *${primeiroNome}*, você é especial!\\n\\n📊 Notamos que sua frequência pode melhorar...\\n\\n🎁 *PRESENTE EXCLUSIVO PARA VOCÊ:*\\n💰 ${member.oferta}\\n🏋️ Vamos maximizar seus resultados?\\n\\n💪 Que tal um treino hoje mesmo?\\n\\nSua dedicação merece mais! 🔥\\n\\n📞 Responda *SIM* para agendar!\\n\\n🏃‍♂️ *Academia Full Force* - Juntos somos mais fortes!`,\n  \n  BAIXA: `🌟 *${primeiroNome}*, hora da transformação!\\n\\n💪 A melhor versão de você está esperando!\\n\\n🎁 *OFERTA IMPERDÍVEL:*\\n💰 ${member.oferta}\\n🏋️ Equipamentos de última geração\\n👨‍🏫 Professores especializados\\n📊 Resultados comprovados\\n\\n🔥 Pronto para a mudança real?\\n\\n📞 Responda *SIM* e comece HOJE!\\n\\n🏃‍♂️ *Academia Full Force* - Onde sonhos viram realidade!`\n};\n\nconst message = templates[member.urgencia] || templates.BAIXA;\n\nreturn {\n  ...member,\n  mensagem: message,\n  chatId: `${member.telefone}@c.us`,\n  timestamp: new Date().toISOString()\n};"
      },
      "name": "Generate Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300],
      "id": "generate-message"
    },
    {
      "parameters": {
        "url": "={{ $env.WAHA_API_URL }}/api/sessions/fullforce-session/chats/{{ $json.chatId }}/messages/text",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"X-Api-Key\": \"{{ $env.WAHA_API_KEY }}\",\n          \"Content-Type\": \"application/json\"\n        },\n        \"body\": {\n          \"chatId\": \"{{ $json.chatId }}\",\n          \"text\": \"{{ $json.mensagem }}\"\n        },\n        \"options\": {\n          \"timeout\": 30000,\n          \"retry\": {\n            \"enabled\": true,\n            \"maxAttempts\": 3\n          }\n        }\n      },\n      \"name\": \"WAHA Send Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 3,\n      \"position\": [1050, 300],\n      \"id\": \"waha-send-message\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $env.FULLFORCE_API_URL }}/api/messages/log\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Authorization\": \"Bearer {{ $env.FULLFORCE_API_KEY }}\",\n          \"Content-Type\": \"application/json\"\n        },\n        \"body\": {\n          \"phone\": \"{{ $json.telefone }}\",\n          \"message_text\": \"{{ $json.mensagem }}\",\n          \"direction\": \"outbound\",\n          \"message_type\": \"text\",\n          \"campaign_id\": \"campaign_650\",\n          \"segment\": \"{{ $json.urgencia }}\",\n          \"member_name\": \"{{ $json.nome }}\",\n          \"waha_response\": \"{{ $json.wahaResponse }}\"\n        },\n        \"options\": {\n          \"timeout\": 10000\n        }\n      },\n      \"name\": \"Log to Database\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 3,\n      \"position\": [1250, 300],\n      \"id\": \"log-to-database\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Calculate Campaign ROI and Results\\nconst results = $input.all();\\nconst sent = results.filter(r => {\\n  try {\\n    return r.json.success === true || (r.json.status && r.json.status >= 200 && r.json.status < 300);\\n  } catch {\\n    return false;\\n  }\\n}).length;\\n\\nconst errors = results.length - sent;\\nconst avgMonthlyValue = 129.90;\\n\\nconst conversionRates = {\\n  CRITICA: 0.35,\\n  ALTA: 0.25,\\n  MEDIA: 0.15,\\n  BAIXA: 0.08\\n};\\n\\nlet expectedRevenue = 0;\\nlet expectedNewMembers = 0;\\nconst segmentBreakdown = {\\n  CRITICA: { sent: 0, expected: 0 },\\n  ALTA: { sent: 0, expected: 0 },\\n  MEDIA: { sent: 0, expected: 0 },\\n  BAIXA: { sent: 0, expected: 0 }\\n};\\n\\nresults.forEach(result => {\\n  try {\\n    const isSuccess = result.json.success === true || (result.json.status && result.json.status >= 200 && result.json.status < 300);\\n    \\n    if (isSuccess && result.json.segment) {\\n      const segment = result.json.segment;\\n      const rate = conversionRates[segment] || 0.08;\\n      const months = (segment === 'CRITICA' || segment === 'ALTA') ? 6 : 3;\\n      \\n      expectedRevenue += avgMonthlyValue * rate * months;\\n      expectedNewMembers += rate;\\n      \\n      if (segmentBreakdown[segment]) {\\n        segmentBreakdown[segment].sent++;\\n        segmentBreakdown[segment].expected += rate;\\n      }\\n    }\\n  } catch (error) {\\n    console.log('Error processing result:', error);\\n  }\\n});\\n\\nconst investment = 1500;\\nconst roi = ((expectedRevenue - investment) / investment) * 100;\\nconst successRate = sent > 0 ? ((sent / results.length) * 100) : 0;\\n\\nconst report = {\\n  timestamp: new Date().toISOString(),\\n  campaign: 'Campaign 650 - WAHA N8N',\\n  platform: 'N8N + WAHA Cloud',\\n  execution: {\\n    totalProcessed: results.length,\\n    sent,\\n    errors,\\n    successRate: successRate.toFixed(1) + '%'\\n  },\\n  roi: {\\n    investment,\\n    expectedRevenue: expectedRevenue.toFixed(2),\\n    roi: roi.toFixed(0) + '%',\\n    expectedNewMembers: Math.floor(expectedNewMembers)\\n  },\\n  segments: segmentBreakdown,\\n  performance: {\\n    avgMonthlyValue,\\n    conversionRates,\\n    projectedMonthlyRevenue: (expectedNewMembers * avgMonthlyValue).toFixed(2)\\n  }\\n};\\n\\nconsole.log('Campaign 650 Results:', report);\\n\\nreturn report;\"\n      },\n      \"name\": \"Calculate ROI\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [1450, 300],\n      \"id\": \"calculate-roi\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $env.FULLFORCE_API_URL }}/api/campaigns/report\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Authorization\": \"Bearer {{ $env.FULLFORCE_API_KEY }}\",\n          \"Content-Type\": \"application/json\"\n        },\n        \"body\": \"={{ $json }}\",\n        \"options\": {\n          \"timeout\": 10000\n        }\n      },\n      \"name\": \"Send Report\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 3,\n      \"position\": [1650, 300],\n      \"id\": \"send-report\"\n    },\n    {\n      \"parameters\": {\n        \"responseBody\": \"={{ { success: true, campaign: 'FullForce Academia Campaign 650', results: $json, webhook: 'fullforce-650-campaign' } }}\"\n      },\n      \"name\": \"Webhook Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [1850, 300],\n      \"id\": \"webhook-response\"\n    }\n  ],\n  \"connections\": {\n    \"Webhook Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Load Members\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Load Members\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Segment Members\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Segment Members\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"WAHA Send Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"WAHA Send Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Log to Database\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Log to Database\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculate ROI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculate ROI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Report\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Report\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Webhook Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": null,\n  \"tags\": [\"FullForce\", \"Academia\", \"WhatsApp\", \"WAHA\", \"Campaign\", \"ROI\"],\n  \"triggerCount\": 1,\n  \"updatedAt\": \"2025-09-19T16:15:00.000Z\",\n  \"versionId\": \"1\"\n}