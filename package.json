{
  "name": "full-force-academia-assistant",
  "version": "1.0.0",
  "description": "Assistente virtual WhatsApp para Academia Full Force",
  "main": "src/index-baileys.js",
  "scripts": {
    "start": "node src/whatsapp-master-system.js",
    "start:baileys": "node src/index-baileys.js",
    "start:auto": "node src/auto-connect-system.js",
    "start:n8n": "node src/index-n8n-integrated.js",
    "dev": "nodemon src/whatsapp-master-system.js",
    "dev:baileys": "nodemon src/index-baileys.js",
    "dev:auto": "nodemon src/auto-connect-system.js",
    "dev:n8n": "nodemon src/index-n8n-integrated.js",
    "test": "jest",
    "format": "prettier --write .",
    "lint": "eslint src/",
    "docker:build": "docker build -t academia-whatsapp-bot .",
    "docker:run": "docker run -p 3001:3001 --env-file .env academia-whatsapp-bot",
    "docker:up": "docker-compose -f ../docker-compose-academia-waha.yml up -d",
    "docker:down": "docker-compose -f ../docker-compose-academia-waha.yml down",
    "docker:logs": "docker-compose -f ../docker-compose-academia-waha.yml logs -f",
    "docker:restart": "npm run docker:down && npm run docker:up",
    "docker:status": "docker-compose -f ../docker-compose-academia-waha.yml ps",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "docker:rebuild": "npm run docker:down && npm run docker:clean && npm run docker:build && npm run docker:up",
    "health:check": "curl -f http://localhost:3001/health || echo 'Service not available'",
    "health:all": "npm run health:check && curl -f http://localhost:3000/api/health && curl -f http://localhost:5678/healthz",
    "logs:app": "docker logs academia-whatsapp-bot -f",
    "logs:waha": "docker logs academia-waha -f",
    "logs:n8n": "docker logs academia-n8n -f",
    "monitor:services": "watch -n 5 'docker-compose -f ../docker-compose-academia-waha.yml ps'",
    "backup:volumes": "docker run --rm -v academia_postgres_data:/data -v $(pwd)/backups:/backup alpine tar czf /backup/postgres-$(date +%Y%m%d_%H%M%S).tar.gz -C /data .",
    "restore:volumes": "docker run --rm -v academia_postgres_data:/data -v $(pwd)/backups:/backup alpine sh -c 'cd /data && tar xzf /backup/postgres-*.tar.gz'",
    "setup:directories": "mkdir -p logs/app logs/waha logs/n8n scripts config backups",
    "validate:config": "node scripts/validate-config.js",
    "test:integration": "node scripts/integration-test.js",
    "monitor:health": "node scripts/health-monitor.js",
    "monitor:continuous": "node scripts/health-monitor.js --continuous",
    "cleanup:docker": "node scripts/docker-cleanup.js",
    "migrate:db": "node scripts/migrate-database.js",
    "seed:db": "node scripts/seed-database.js",
    "test:n8n": "node scripts/test-n8n-integration.js",
    "test:n8n:stress": "node scripts/test-n8n-integration.js --stress",
    "campaign:650": "curl -X POST http://localhost:3001/api/trigger-650-campaign",
    "dashboard:n8n": "curl http://localhost:3001/api/dashboard",
    "setup:n8n": "cp .env.n8n.example .env && echo 'Configure .env file and run: npm run start:n8n'",
    "waha:deploy": "bash scripts/deploy-railway.sh",
    "waha:campaign": "node scripts/waha-campaign-650.js",
    "waha:campaign:test": "node scripts/waha-campaign-650.js --test",
    "waha:campaign:dry": "node scripts/waha-campaign-650.js --dry-run",
    "waha:help": "node scripts/waha-campaign-650.js --help"
  },
  "keywords": [
    "whatsapp",
    "academia",
    "assistente-virtual",
    "google-calendar",
    "google-sheets"
  ],
  "author": "Full Force Academia",
  "license": "MIT",
  "dependencies": {
    "@hapi/boom": "^10.0.1",
    "@whiskeysockets/baileys": "^6.7.19",
    "axios": "^1.7.7",
    "bullmq": "^4.15.4",
    "cors": "^2.8.5",
    "csv-parser": "^3.2.0",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "express-rate-limit": "^7.1.5",
    "googleapis": "^134.0.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "moment": "^2.30.1",
    "pg": "^8.11.3",
    "pino": "^8.21.0",
    "pino-pretty": "^11.3.0",
    "qrcode-terminal": "^0.12.0",
    "redis": "^4.6.10"
  },
  "devDependencies": {
    "@railway/cli": "^4.8.0",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.4",
    "prettier": "^3.3.3"
  }
}
