#!/bin/bash

echo "üöÄ FullForce Academia - Deploy Automatizado"
echo "==========================================="
echo ""

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar se tem .env
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env n√£o encontrado${NC}"
    echo "Copiando .env.production.example para .env..."
    cp .env.production.example .env
    echo -e "${RED}‚ùå EDITE o arquivo .env com suas credenciais antes de continuar!${NC}"
    exit 1
fi

echo "Escolha a plataforma de deploy:"
echo ""
echo "1. üöÇ Railway (Recomendado)"
echo "2. üü£ Heroku"
echo "3. üê≥ Docker Local"
echo "4. üê≥ Docker Compose"
echo "5. üì¶ Build e Test Local"
echo ""
read -p "Digite o n√∫mero da op√ß√£o: " opcao

case $opcao in
    1)
        echo -e "${GREEN}üöÇ Deploying para Railway...${NC}"

        # Verificar se Railway CLI est√° instalado
        if ! command -v railway &> /dev/null; then
            echo "Instalando Railway CLI..."
            npm install -g @railway/cli
        fi

        echo "Fazendo login no Railway..."
        railway login

        echo "Criando projeto..."
        railway init

        echo "Fazendo deploy..."
        railway up

        echo -e "${GREEN}‚úÖ Deploy conclu√≠do!${NC}"
        echo "Acesse: railway open"
        ;;

    2)
        echo -e "${GREEN}üü£ Deploying para Heroku...${NC}"

        # Verificar se Heroku CLI est√° instalado
        if ! command -v heroku &> /dev/null; then
            echo "Instalando Heroku CLI..."
            curl https://cli-assets.heroku.com/install.sh | sh
        fi

        echo "Fazendo login no Heroku..."
        heroku login

        echo "Criando app..."
        read -p "Nome do app (ex: fullforce-reativacao): " appname
        heroku create $appname

        echo "Configurando vari√°veis de ambiente..."
        source .env
        heroku config:set GOOGLE_SHEETS_ID=$GOOGLE_SHEETS_ID
        heroku config:set WAHA_API_URL=$WAHA_API_URL
        heroku config:set WAHA_API_KEY=$WAHA_API_KEY
        heroku config:set NODE_ENV=production

        echo "Fazendo deploy..."
        git push heroku master

        echo -e "${GREEN}‚úÖ Deploy conclu√≠do!${NC}"
        echo "Acesse: heroku open"
        ;;

    3)
        echo -e "${GREEN}üê≥ Build Docker Local...${NC}"

        docker build -f Dockerfile.reactivation -t fullforce-reativacao .

        echo "Rodando container..."
        docker run -d \
            --name fullforce-reativacao \
            -p 4002:4002 \
            --env-file .env \
            fullforce-reativacao

        echo -e "${GREEN}‚úÖ Container rodando!${NC}"
        echo "Acesse: http://localhost:4002"
        echo "Logs: docker logs -f fullforce-reativacao"
        ;;

    4)
        echo -e "${GREEN}üê≥ Docker Compose...${NC}"

        docker-compose up -d

        echo -e "${GREEN}‚úÖ Servi√ßos iniciados!${NC}"
        echo "Acesse: http://localhost:4002"
        echo "Logs: docker-compose logs -f"
        ;;

    5)
        echo -e "${GREEN}üì¶ Build e Test Local...${NC}"

        echo "Instalando depend√™ncias..."
        npm install

        echo "Testando sistema..."
        node -e "
        const ReactivationSystem = require('./reactivation-system');
        const system = new ReactivationSystem();
        system.campaignAutomation.testarSistema().then(() => {
            console.log('‚úÖ Testes passaram!');
            process.exit(0);
        }).catch(err => {
            console.error('‚ùå Erro nos testes:', err);
            process.exit(1);
        });
        "

        echo "Iniciando servidor..."
        node reactivation-system.js
        ;;

    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida${NC}"
        exit 1
        ;;
esac
